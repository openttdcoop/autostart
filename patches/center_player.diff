Index: src/lang/english.txt
===================================================================
--- src/lang/english.txt	(revision 19523)
+++ src/lang/english.txt	(working copy)
@@ -2586,6 +2586,10 @@
 STR_COMPANY_VIEW_VIEW_HQ_TOOLTIP                                :{BLACK}View company headquarters
 STR_COMPANY_VIEW_RELOCATE_HQ                                    :{BLACK}Relocate HQ
 STR_COMPANY_VIEW_RELOCATE_COMPANY_HEADQUARTERS                  :{BLACK}Rebuild company headquarters elsewhere for 1% cost of company value
+STR_COMPANY_VIEW_CENTER_VIEWPORT                                :{BLACK}Center viewport to place where company built last time
+STR_COMPANY_VIEW_OPEN_VIEWPORT                                  :{BLACK}Open new viewport to watch company's actions
+STR_COMPANY_VIEW_CENTER                                         :{BLACK}Center view
+STR_COMPANY_VIEW_OPEN                                           :{BLACK}Open window
 
 STR_COMPANY_VIEW_NEW_FACE_BUTTON                                :{BLACK}New Face
 STR_COMPANY_VIEW_NEW_FACE_TOOLTIP                               :{BLACK}Select new face for manager
Index: src/company_cmd.cpp
===================================================================
--- src/company_cmd.cpp	(revision 19523)
+++ src/company_cmd.cpp	(working copy)
@@ -52,7 +52,8 @@
 Company::Company(uint16 name_1, bool is_ai) :
 	name_1(name_1),
 	location_of_HQ(INVALID_TILE),
-	is_ai(is_ai)
+	is_ai(is_ai),
+	window(-1)
 {
 	for (uint j = 0; j < 4; j++) this->share_owners[j] = COMPANY_SPECTATOR;
 	InvalidateWindowData(WC_PERFORMANCE_DETAIL, 0, INVALID_COMPANY);
Index: src/command.cpp
===================================================================
--- src/command.cpp	(revision 19523)
+++ src/command.cpp	(working copy)
@@ -23,6 +23,9 @@
 #include "town.h"
 #include "date_func.h"
 #include "debug.h"
+#include "window_func.h"
+#include "viewport_type.h"
+#include "viewport_func.h"
 #include "company_func.h"
 #include "company_base.h"
 #include "signal_func.h"
@@ -661,7 +664,17 @@
 	/* update last build coordinate of company. */
 	if (tile != 0) {
 		Company *c = Company::GetIfValid(_current_company);
-		if (c != NULL) c->last_build_coordinate = tile;
+		if (c != NULL && c->last_build_coordinate != tile) {
+			c->last_build_coordinate = tile;
+			if (c->window != -1) {
+				Window *w = FindWindowById(WC_EXTRA_VIEW_PORT, c->window);
+				if (w != NULL) {
+					ScrollWindowTo(TileX(tile) * TILE_SIZE + TILE_SIZE / 2, TileY(tile) * TILE_SIZE + TILE_SIZE / 2, -1, w, true);
+				} else {
+					c->window = -1;
+				}
+			}
+		}
 	}
 
 	SubtractMoneyFromCompany(res2);
Index: src/company_base.h
===================================================================
--- src/company_base.h	(revision 19523)
+++ src/company_base.h	(working copy)
@@ -74,6 +74,8 @@
 
 	bool is_ai;
 
+	int window;
+
 	class AIInstance *ai_instance;
 	class AIInfo *ai_info;
 
Index: src/company_gui.cpp
===================================================================
--- src/company_gui.cpp	(revision 19523)
+++ src/company_gui.cpp	(working copy)
@@ -13,6 +13,7 @@
 #include "gui.h"
 #include "window_gui.h"
 #include "textbuf_gui.h"
+#include "window_func.h"
 #include "viewport_func.h"
 #include "company_func.h"
 #include "command_func.h"
@@ -27,6 +28,7 @@
 #include "date_func.h"
 #include "widgets/dropdown_type.h"
 #include "tilehighlight_func.h"
+#include "map_func.h"
 #include "sprite.h"
 #include "company_base.h"
 #include "core/geometry_func.hpp"
@@ -1592,6 +1594,9 @@
 	CW_WIDGET_SELECT_RELOCATE,    ///< View/hide the 'Relocate HQ' button.
 	CW_WIDGET_RELOCATE_HQ,
 
+	CW_WIDGET_CENTER,
+	CW_WIDGET_OPEN,
+
 	CW_WIDGET_HAS_PASSWORD,       ///< Draw a lock when the company has a password
 	CW_WIDGET_SELECT_MULTIPLAYER, ///< Multiplayer selection panel.
 	CW_WIDGET_COMPANY_PASSWORD,
@@ -1638,6 +1643,8 @@
 							NWidget(WWT_TEXTBTN, COLOUR_GREY, CW_WIDGET_RELOCATE_HQ), SetFill(1, 0), SetDataTip(STR_COMPANY_VIEW_RELOCATE_HQ, STR_COMPANY_VIEW_RELOCATE_COMPANY_HEADQUARTERS),
 							NWidget(NWID_SPACER), SetMinimalSize(90, 0),
 						EndContainer(),
+						NWidget(WWT_PUSHTXTBTN, COLOUR_GREY, CW_WIDGET_CENTER), SetFill(1, 0), SetDataTip(STR_COMPANY_VIEW_CENTER, STR_COMPANY_VIEW_CENTER_VIEWPORT),
+						NWidget(WWT_PUSHTXTBTN, COLOUR_GREY, CW_WIDGET_OPEN), SetFill(1, 0), SetDataTip(STR_COMPANY_VIEW_OPEN, STR_COMPANY_VIEW_OPEN_VIEWPORT),
 						NWidget(NWID_SPACER), SetFill(0, 1),
 					EndContainer(),
 				EndContainer(),
@@ -1967,6 +1974,21 @@
 				DoCommandP(0, this->window_number, 0, CMD_BUY_SHARE_IN_COMPANY | CMD_MSG(STR_ERROR_CAN_T_BUY_25_SHARE_IN_THIS));
 				break;
 
+			case CW_WIDGET_CENTER:
+				ScrollMainWindowToTile(Company::Get((CompanyID)this->window_number)->last_build_coordinate);
+				break;
+
+			case CW_WIDGET_OPEN: {
+				int window = ShowExtraViewPortWindow();
+				Company *c = Company::Get((CompanyID)this->window_number);
+				TileIndex tile = c->last_build_coordinate;
+
+				c->window = window;
+				ScrollWindowTo(TileX(tile) * TILE_SIZE + TILE_SIZE / 2, TileY(tile) * TILE_SIZE + TILE_SIZE / 2, -1, FindWindowById(WC_EXTRA_VIEW_PORT, window), true);
+				break;
+			}
+
+
 			case CW_WIDGET_SELL_SHARE:
 				DoCommandP(0, this->window_number, 0, CMD_SELL_SHARE_IN_COMPANY | CMD_MSG(STR_ERROR_CAN_T_SELL_25_SHARE_IN));
 				break;
Index: src/viewport_gui.cpp
===================================================================
--- src/viewport_gui.cpp	(revision 19523)
+++ src/viewport_gui.cpp	(working copy)
@@ -167,7 +167,7 @@
 	_nested_extra_view_port_widgets, lengthof(_nested_extra_view_port_widgets)
 );
 
-void ShowExtraViewPortWindow(TileIndex tile)
+int ShowExtraViewPortWindow(TileIndex tile)
 {
 	int i = 0;
 
@@ -175,4 +175,6 @@
 	while (FindWindowById(WC_EXTRA_VIEW_PORT, i) != NULL) i++;
 
 	new ExtraViewportWindow(&_extra_view_port_desc, i, tile);
+
+	return i;
 }
Index: src/gui.h
===================================================================
--- src/gui.h	(revision 19523)
+++ src/gui.h	(working copy)
@@ -63,7 +63,7 @@
 
 void ShowErrorMessage(StringID summary_msg, StringID detailed_msg, WarningLevel wl, int x = 0, int y = 0);
 
-void ShowExtraViewPortWindow(TileIndex tile = INVALID_TILE);
+int ShowExtraViewPortWindow(TileIndex tile = INVALID_TILE);
 
 void BuildFileList();
 void SetFiosType(const byte fiostype);
